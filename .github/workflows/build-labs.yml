name: Build with LABS_BUILD

on:
  push:
    branches:
      - main

jobs:
  select-houdini-build:
    name: Select houdini build
    runs-on: [self-hosted, Linux, X64, houdini]
    outputs:
      houdini-build-20-5: ${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}
      houdini-build-21-0: ${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}
      # Legend
      # name - Human readable OS/Arch name. Version is appended separately.
      # run-on-all-branches - Whether to run this target on all branches. If false, will only run on main
      # runner - Github actions runner that should run the job
      # generator - Generator used for cmake configuration
      # houdini-version - Version of houdini to build against (e.g. "20.5"/"21.0")
      # houdini-build - Specific build of houdini to build against (e.g. "440")
      # houdini-install-path - Path into which houdini gets installed. This needs to be consistent with houdini install script, as it calculates path for previous version when removing it. On Windows it MUST USE BACKSLASHES.
      # hfs-path - Path to use HFS env var to. This is same as houdini-install-path on most platforms, but macOS is special and required additional suffix after houdini-install-path.
      # python-command - Python command to use for running scripts (e.g. "python"/"python3")
      # python-venv-activate-path - Path to powershell python venv activation script within venv folder
      # additional-config-args - Additional commad line args to pass to cmake configuration. Required on macOS to specify architectrue (arm64/x64)
      build-matrix-json: |
        {
          "include": [
            {
              "name": "Windows x64",
              "runner": "windows-latest",
              "generator": "Visual Studio 17 2022",
              "executable-extension": ".exe",
              "houdini-version": "20.5",
              "houdini-build": "${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "houdini-platform": "win64-vc143",
              "houdini-install-path": "C:\\Houdini\\20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "hfs-path": "C:\\Houdini\\20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "python-command": "python",
              "python-venv-activate-path": "Scripts/Activate.ps1",
              "additional-config-args": null
            },
            {
              "name": "Windows x64",
              "runner": "windows-latest",
              "generator": "Visual Studio 17 2022",
              "executable-extension": ".exe",
              "houdini-version": "21.0",
              "houdini-build": "${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "houdini-platform": "win64-vc143",
              "houdini-install-path": "C:\\Houdini\\21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "hfs-path": "C:\\Houdini\\21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "python-command": "python",
              "python-venv-activate-path": "Scripts/Activate.ps1",
              "additional-config-args": null
            },
            {
              "name": "Linux x64",
              "runner": [
                "self-hosted",
                "Linux",
                "X64",
                "houdini"
              ],
              "generator": "Ninja Multi-Config",
              "executable-extension": null,
              "houdini-version": "20.5",
              "houdini-build": "${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "houdini-platform": "linux_x86_64_gcc11.2",
              "houdini-install-path": "/opt/hfs20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "hfs-path": "/opt/hfs20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "python-command": "python3",
              "python-venv-activate-path": "bin/Activate.ps1",
              "additional-config-args": null
            },
            {
              "name": "Linux x64",
              "runner": [
                "self-hosted",
                "Linux",
                "X64",
                "houdini"
              ],
              "generator": "Ninja Multi-Config",
              "executable-extension": null,
              "houdini-version": "21.0",
              "houdini-build": "${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "houdini-platform": "linux_x86_64_gcc11.2",
              "houdini-install-path": "/opt/hfs21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "hfs-path": "/opt/hfs21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "python-command": "python3",
              "python-venv-activate-path": "bin/Activate.ps1",
              "additional-config-args": null
            },
            {
              "name": "macOS arm64",
              "runner": "macos-14",
              "generator": "Xcode",
              "executable-extension": null,
              "houdini-version": "20.5",
              "houdini-build": "${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "houdini-platform": "macosx_arm64_clang15.0_14",
              "houdini-install-path": "/Applications/Houdini/Houdini20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "hfs-path": "/Applications/Houdini/Houdini20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}/Frameworks/Houdini.framework/Versions/Current/Resources",
              "python-command": "python3",
              "python-venv-activate-path": "bin/Activate.ps1",
              "additional-config-args": "-DCMAKE_OSX_ARCHITECTURES=arm64"
            },
            {
              "name": "macOS arm64",
              "runner": "macos-14",
              "generator": "Xcode",
              "executable-extension": null,
              "houdini-version": "21.0",
              "houdini-build": "${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "houdini-platform": "macosx_arm64_clang15.0_14",
              "houdini-install-path": "/Applications/Houdini/Houdini21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "hfs-path": "/Applications/Houdini/Houdini21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}/Frameworks/Houdini.framework/Versions/Current/Resources",
              "python-command": "python3",
              "python-venv-activate-path": "bin/Activate.ps1",
              "additional-config-args": "-DCMAKE_OSX_ARCHITECTURES=arm64"
            },
            {
              "name": "macOS x64",
              "runner": "macos-14",
              "generator": "Xcode",
              "executable-extension": null,
              "houdini-version": "20.5",
              "houdini-build": "${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "houdini-platform": "macosx_x86_64_clang15.0_14",
              "houdini-install-path": "/Applications/Houdini/Houdini20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}",
              "hfs-path": "/Applications/Houdini/Houdini20.5.${{ steps.select_houdini_20_5_build.outputs.houdini_build_20_5 }}/Frameworks/Houdini.framework/Versions/Current/Resources",
              "python-command": "python3",
              "python-venv-activate-path": "bin/Activate.ps1",
              "additional-config-args": "-DCMAKE_OSX_ARCHITECTURES=x86_64"
            },
            {
              "name": "macOS x64",
              "runner": "macos-14",
              "generator": "Xcode",
              "executable-extension": null,
              "houdini-version": "21.0",
              "houdini-build": "${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "houdini-platform": "macosx_x86_64_clang15.0_14",
              "houdini-install-path": "/Applications/Houdini/Houdini21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}",
              "hfs-path": "/Applications/Houdini/Houdini21.0.${{ steps.select_houdini_21_0_build.outputs.houdini_build_21_0 }}/Frameworks/Houdini.framework/Versions/Current/Resources",
              "python-command": "python3",
              "python-venv-activate-path": "bin/Activate.ps1",
              "additional-config-args": "-DCMAKE_OSX_ARCHITECTURES=x86_64"
            }
          ]
        }

    steps:
      - name: Sync
        uses: actions/checkout@v4

      - name: Select Houdini 20.5 build
        id: select_houdini_20_5_build
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: |
          python3 -m venv actions/houdini/venv
          ./actions/houdini/venv/bin/Activate.ps1
          pip3 install -r actions/houdini/requirements.txt
          python3 actions/houdini/select_build.py --product houdini --version 20.5 --platforms win64-vc143 macosx_arm64_clang15.0_14 macosx_x86_64_clang15.0_14 linux_x86_64_gcc11.2
        env:
          HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
          HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}

      - name: Select Houdini 21.0 build
        id: select_houdini_21_0_build
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: |
          python3 -m venv actions/houdini/venv
          ./actions/houdini/venv/bin/Activate.ps1
          pip3 install -r actions/houdini/requirements.txt
          python3 actions/houdini/select_build.py --product houdini --version 21.0 --platforms win64-vc143 macosx_arm64_clang15.0_14 macosx_x86_64_clang15.0_14 linux_x86_64_gcc11.2
        env:
          HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
          HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}
    
  build-plugin:
    needs: select-houdini-build
    strategy:
      fail-fast: false
      matrix: ${{ fromJson( needs.select-houdini-build.outputs.build-matrix-json ) }}
            
    runs-on: ${{ matrix.runner }}
    name: Build ${{ matrix.name }} Houdini ${{ matrix.houdini-version }}.${{ matrix.houdini-build }}

    steps:
      - name: Sync
        uses: actions/checkout@v4

      - name: Check if Houdini is installed
        id: install-check
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: |
          ${{ matrix.python-command }} actions/houdini/is_installed.py --version ${{ matrix.houdini-version }} --build ${{ matrix.houdini-build }} --platform ${{ matrix.houdini-platform }} --install_path ${{ matrix.houdini-install-path }}

      - name: Install Houdini
        if: ${{ steps.install-check.outputs.need_install_houdini == 'true' }}
        working-directory: ${{ github.workspace }}
        timeout-minutes: 30
        shell: pwsh
        run: |
          ${{ matrix.python-command }} -m venv actions/houdini/venv
          ./actions/houdini/venv/${{ matrix.python-venv-activate-path }}
          ${{ matrix.python-command }} -m pip install -r actions/houdini/requirements.txt
          ${{ matrix.python-command }} actions/houdini/install_houdini.py --version ${{ matrix.houdini-version }} --build ${{ matrix.houdini-build }} --platform ${{ matrix.houdini-platform }} --install_path ${{ matrix.houdini-install-path }}
        env:
          HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
          HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}

      - name: Configure Cmake
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: cmake -S . -B build -G "${{ matrix.generator }}" -DLABS_BUILD=ON -DZIBRAVDB_OUTPUT_PATH="${{ github.workspace }}/package" ${{ matrix.additional-config-args }}
        env:
          HFS: ${{ matrix.hfs-path }}

      # TODO: Debug build is now disabled due to absence of python debug lib to link
      # - name: Build Debug
      #   working-directory: ${{ github.workspace }}
      #   shell: pwsh
      #   # Need to delete all generated artifacts, so Ninja Multi-Config does not get tripped up by existing artifacts when building Release
      #   run: |
      #     cmake --build build --config Debug
      #     Remove-Item -Recurse -Force "${{ github.workspace }}/package"

      - name: Build Release
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: cmake --build build --config Release
  