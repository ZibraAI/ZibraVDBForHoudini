name: Build

on: [push]

jobs:
  build-windows-x64:
    name: Build ZibraVDB for Houdini 20.5 (Windows-x64)
    runs-on: windows-latest
    concurrency:
      group: windows-x64-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Sync
      uses: actions/checkout@v4

    - name: Install Houdini
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        python -m venv actions/install_houdini/venv
        .\actions\install_houdini\venv\Scripts\Activate.ps1
        pip install -r actions/install_houdini/requirements.txt
        python actions/install_houdini/install_houdini.py --version "20.5" --platform "win64-vc143"
      env:
        HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
        HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}

    - name: Configure Cmake
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake -S . -B build-20_5-windows -G "Visual Studio 17 2022"
      env:
        HFS: C:\Houdini

    - name: Build Release
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-windows --config Release

    - name: Build Debug
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-windows --config Debug

  build-linux-x64:
    name: Build ZibraVDB for Houdini 20.5 (Linux-x64)
    runs-on: [self-hosted, Linux, X64, houdini]
    concurrency:
      group: linux-x64-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Sync
      uses: actions/checkout@v4

    - name: Configure Cmake
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake -S . -B build-20_5-linux -G "Ninja Multi-Config"

    - name: Build Release
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-linux --config Release

    - name: Build Debug
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-linux --config Debug

  build-macos-arm64:
    name: Build ZibraVDB for Houdini 20.5 (macOS-arm64)
    runs-on: macos-latest
    concurrency:
      group: macos-arm64-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Sync
      uses: actions/checkout@v4

    - name: Install Houdini
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        python3 -m venv actions/install_houdini/venv
        ./actions/install_houdini/venv/bin/Activate.ps1
        pip3 install -r actions/install_houdini/requirements.txt
        python3 actions/install_houdini/install_houdini.py --version "20.5" --platform "macosx_arm64_clang15"
      env:
        HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
        HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}

    - name: Configure Cmake
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake -S . -B build-20_5-macos -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=arm64
      env:
        HFS: /Applications/Houdini/Current/Frameworks/Houdini.framework/Versions/Current/Resources

    - name: Build Release
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-macos --config Release

    - name: Build Debug
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-macos --config Debug

  build-macos-x86_64:
    name: Build ZibraVDB for Houdini 20.5 (macOS-x86_64)
    runs-on: macos-latest
    concurrency:
      group: macos-x86_64-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Sync
      uses: actions/checkout@v4

    - name: Install Houdini
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        python3 -m venv actions/install_houdini/venv
        ./actions/install_houdini/venv/bin/Activate.ps1
        pip3 install -r actions/install_houdini/requirements.txt
        python3 actions/install_houdini/install_houdini.py --version "20.5" --platform "macosx_x86_64_clang15"
      env:
        HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
        HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}

    - name: Configure Cmake
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake -S . -B build-20_5-macos -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64
      env:
        HFS: /Applications/Houdini/Current/Frameworks/Houdini.framework/Versions/Current/Resources

    - name: Build Release
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-macos --config Release

    - name: Build Debug
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build-20_5-macos --config Debug
    