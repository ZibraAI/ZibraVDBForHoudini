name: Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-windows-x64:
    name: Build ZibraVDB for Houdini 20.5 (Windows-x64)
    runs-on: windows-latest
    steps:

    - name: Sync
      uses: actions/checkout@v4

    - name: Install Houdini
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        python -m venv actions/install_houdini/venv
        .\actions\install_houdini\venv\Scripts\Activate.ps1
        pip install -r actions/install_houdini/requirements.txt
        python actions/install_houdini/install_houdini.py --version "20.5" --platform "win64-vc143"
      env:
        HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
        HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}

    - name: Configure Cmake
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake -S . -B build -G "Visual Studio 17 2022" -DZIBRAVDB_OUTPUT_PATH=${{ github.workspace }}\package
      env:
        HFS: C:\Houdini

    - name: Build Release
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build --config Release

    - name: Repack HDA into Binary format
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        C:\Houdini\bin\hotl.exe -l ${{ github.workspace }}\package\otls\zibravdb_filecache.1.0.hda ${{ github.workspace }}\package\otls\zibravdb_filecache.1.0.hda.2
        Remove-Item -Recurse -Force ${{ github.workspace }}\package\otls\zibravdb_filecache.1.0.hda
        Move-Item -Path ${{ github.workspace }}\package\otls\zibravdb_filecache.1.0.hda.2 -Destination ${{ github.workspace }}\package\otls\zibravdb_filecache.1.0.hda

    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ZibraVDBForHoudini-20_5-Windows-x64
        path: package
        if-no-files-found: error

  build-linux-x64:
    name: Build ZibraVDB for Houdini 20.5 (Linux-x64)
    runs-on: [self-hosted, Linux, X64, houdini]
    steps:

    - name: Sync
      uses: actions/checkout@v4

    - name: Configure Cmake
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake -S . -B build -G "Ninja Multi-Config" -DZIBRAVDB_OUTPUT_PATH=${{ github.workspace }}/package

    - name: Build Release
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build --config Release

    - name: Repack HDA into Binary format
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        /opt/hfs20.5/bin/hotl -l ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda.2
        Remove-Item -Recurse -Force ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda
        Move-Item -Path ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda.2 -Destination ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda

    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ZibraVDBForHoudini-20_5-Linux-x64
        path: package
        if-no-files-found: error

  build-macos-universal:
    name: Build ZibraVDB for Houdini 20.5 (macOS-Universal)
    runs-on: macos-latest
    concurrency:
      group: macos-universal-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Sync
      uses: actions/checkout@v4

    - name: Install Houdini
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        python3 -m venv actions/install_houdini/venv
        ./actions/install_houdini/venv/bin/Activate.ps1
        pip3 install -r actions/install_houdini/requirements.txt
        python3 actions/install_houdini/install_houdini.py --version "20.5" --platform "macosx_x86_64_clang15"
      env:
        HOUDINI_CLIENT_ID: ${{ secrets.HOUDINI_CLIENT_ID }}
        HOUDINI_SECRET_KEY: ${{ secrets.HOUDINI_SECRET_KEY }}

    - name: Configure Cmake
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake -S . -B build -G "Xcode" -DZIBRAVDB_OUTPUT_PATH=${{ github.workspace }}/package
      env:
        HFS: /Applications/Houdini/Current/Frameworks/Houdini.framework/Versions/Current/Resources

    - name: Build Release
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: cmake --build build --config Release

    - name: Apple sign and notarize
      shell: bash
      run: ${{ github.workspace }}/actions/apple/sign_and_notarize_dylib.sh ${{ github.workspace }}/package/dso/ZibraVDBForHoudini.dylib
      env:
        DEVELOPER_ID_APPLICATION_CERT: ${{ secrets.DEVELOPER_ID_APPLICATION_ZIBRA_AI_CERT }}
        DEVELOPER_ID_APPLICATION_PASS: ${{ secrets.DEVELOPER_ID_APPLICATION_ZIBRA_AI_PASS }}
        DEVELOPER_ID_APPLICATION_NAME: ${{ secrets.DEVELOPER_ID_APPLICATION_ZIBRA_AI_NAME }}
        APPLE_DEVELOPER_TEAM: ${{ secrets.APPLE_DEVELOPER_ZIBRA_AI_TEAM }}
        NOTARIZATION_USER: ${{ secrets.NOTARIZATION_ZIBRA_AI_USER }}
        NOTARIZATION_PASS: ${{ secrets.NOTARIZATION_ZIBRA_AI_PASS }}

    - name: Repack HDA into Binary format
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        /Applications/Houdini/Current/Frameworks/Houdini.framework/Versions/Current/Resources/bin/hotl -l ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda.2
        Remove-Item -Recurse -Force ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda
        Move-Item -Path ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda.2 -Destination ${{ github.workspace }}/package/otls/zibravdb_filecache.1.0.hda

    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ZibraVDBForHoudini-20_5-macOS-Universal
        path: package
        if-no-files-found: error

  merge-artifacts:
    name: Merge artifacts
    runs-on: macos-latest
    needs: [build-windows-x64, build-linux-x64, build-macos-universal]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Merge artifacts
        shell: bash
        run: |
          mkdir merged
          mv ZibraVDBForHoudini-20_5-Windows-x64/* merged/
          mv ZibraVDBForHoudini-20_5-Linux-x64/dso/ZibraVDBForHoudini.so merged/dso/ZibraVDBForHoudini.so
          mv ZibraVDBForHoudini-20_5-macOS-Universal/dso/ZibraVDBForHoudini.dylib merged/dso/ZibraVDBForHoudini.dylib

      - name: Save merged artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ZibraVDBForHoudini-20_5
          path: merged
          if-no-files-found: error

      - name: Delete partial artifacts
        uses: geekyeggo/delete-artifact@f275313e70c08f6120db482d7a6b98377786765b # v5.1.0
        with:
          name: |
            ZibraVDBForHoudini-20_5-Windows-x64
            ZibraVDBForHoudini-20_5-Linux-x64
            ZibraVDBForHoudini-20_5-macOS-Universal
